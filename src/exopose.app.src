{application, exopose,
 [
  {description, "exometer services exposed easily"},
  {vsn, "0.1.0"},
  {registered, []},
  {applications, [
                  kernel,
                  stdlib,
                  lager
                 ]},
  {mod, { exopose_app, []}},
  {env,
   [{exometer_core,
     [{predefined,
       %% Memory stats.
       [{[vm, erlang, total],          gauge, []},
        {[vm, erlang, processes],      gauge, []},
        {[vm, erlang, processes_used], gauge, []},
        {[vm, erlang, system],         gauge, []},
        {[vm, erlang, atom],           gauge, []},
        {[vm, erlang, atom_used],      gauge, []},
        {[vm, erlang, binary],         gauge, []},
        {[vm, erlang, ets],            gauge, []},

        %% System processes and ports stats.
        {[sys, erlang, process_count], gauge, []},
        {[sys, erlang, port_count],    gauge, []},
        {[sys, erlang, run_queue],     gauge, []}
       ]}
     ]},

    {callbacks,
     %% Information about memory dynamically allocated by the Erlang emulator.
     %% Every callback returns memory size in bytes.
     [{[vm, erlang, total],          {{erlang, memory, 1}, [total]}},
      {[vm, erlang, processes],      {{erlang, memory, 1}, [processes]}},
      {[vm, erlang, processes_used], {{erlang, memory, 1}, [processes_used]}},
      {[vm, erlang, system],         {{erlang, memory, 1}, [system]}},
      {[vm, erlang, atom],           {{erlang, memory, 1}, [atom]}},
      {[vm, erlang, atom_used],      {{erlang, memory, 1}, [atom_used]}},
      {[vm, erlang, binary],         {{erlang, memory, 1}, [binary]}},
      {[vm, erlang, ets],            {{erlang, memory, 1}, [ets]}},

      %% Number of processes currently existing at the local node as an integer.
      {[sys, erlang, process_count], {{erlang, system_info, 1}, [process_count]}},

      %% Number of ports currently existing at the local node as an integer.
      {[sys, erlang, port_count], {{erlang, system_info, 1}, [port_count]}},

      %% Number of processes that are ready to run on all available run queues.
      {[sys, erlang, run_queue],     {{erlang, statistics, 1}, [run_queue]}}
     ]},

    {sample_timeout, 5000}

   ]}
 ]}.
